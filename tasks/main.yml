---

- include: _load-os-dependend-variables.yml

- include: _nginx_ppa.yml
  when: (nginx_use_ppa) and (ansible_pkg_mgr == "apt")

- set_fact:
    _nginx_site_packages:
      - nginx
    _nginx_site_services:
      - nginx

- set_fact:
    _nginx_site_packages: "{{ _nginx_site_packages }} + ['php5-fpm']"
    _nginx_site_services: "{{ _nginx_site_services }} + ['php5-fpm']"
  when: (features.php is defined) and (ansible_pkg_mgr == "apt")

- set_fact:
    _nginx_site_packages: "{{ _nginx_site_packages }} + ['php56']"
    _nginx_site_services: "{{ _nginx_site_services }} + ['php_fpm']"
  when: (features.php is defined) and (ansible_pkg_mgr == "pkgng")

- name: Packages are installed with Aptitude
  apt:
    force: yes
    update_cache: yes
    cache_valid_time: 3600
    name: nginx
    state: latest
  register: _nginx_install
  when: ansible_pkg_mgr == "apt"

- name: Packages are installed with FreeBSD pkg
  pkgng:
    name: nginx
    state: present
  when: ansible_pkg_mgr == "pkgng"

- name: Services are enabled
  service:
    name: "{{ item }}"
    enabled: yes
  with_items: '{{ _nginx_site_services }}'

- stat:
    path: '{{ ssl_dh_file }}'
  register: _dh_file_st

- name: Diffie-Hellman parameter is generated
  shell: /usr/bin/openssl dhparam -out "{{ ssl_dh_file }}" {{ ssl_dh_size }}
  args:
    chdir:
  when: (encryption != 'off') and not _dh_file_st.stat.exists

- include: _configure-nginx-apache-style.yml

- name: nginx default site is disabled
  file:
    path: '{{ _nginx_config_dir }}/sites-enabled/default'
    state: absent
  when: nginx_disable_default_site
  notify: reload nginx

- name: nginx vhost is configured
  template: 
    src: 'nginx-site.conf.j2'
    dest: '{{ _nginx_config_dir }}/sites-available/{{ site_name }}.conf'
    owner: root 
    mode: '0644'
  register: nginx_vhost_config_template
  notify: reload nginx

- name: nginx vhost is enabled
  file:
    src: '{{ _nginx_config_dir }}//sites-available/{{ site_name }}.conf'
    dest: '{{ _nginx_config_dir }}//sites-enabled/{{ site_name }}.conf'
    state: link
    owner: root
    mode: '0644'
  notify: reload nginx

- stat:
    path: /bin/systemctl
  register: _systemctl_executable

- name: nginx service is unmasked
  command: /bin/systemctl unmask nginx
  when: _nginx_install.changed and _systemctl_executable.stat.exists

- name: nginx service is enabled
  service:
    name: nginx
    enabled: true
